<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shiro.steel.mapper.StockMapper">
  <resultMap id="BaseResultMap" type="com.shiro.steel.entity.Stock">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="memberId" jdbcType="VARCHAR" property="memberid" />
    <result column="productId" jdbcType="VARCHAR" property="productid" />
    <result column="productName" jdbcType="VARCHAR" property="productname" />
    <result column="productSpec" jdbcType="VARCHAR" property="productspec" />
    <result column="productFactory" jdbcType="VARCHAR" property="productfactory" />
    <result column="productMark" jdbcType="VARCHAR" property="productmark" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="total" jdbcType="DECIMAL" property="total" />
    <result column="warehousename" jdbcType="VARCHAR" property="warehousename" />
    <result column="stockOutType" jdbcType="VARCHAR" property="stockouttype" />
    <result column="quality" jdbcType="VARCHAR" property="quality" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="crt" jdbcType="TIMESTAMP" property="crt" />
    <result column="upt" jdbcType="TIMESTAMP" property="upt" />
    <result column="lockman" jdbcType="VARCHAR" property="lockman" />
    <result column="packingNo" jdbcType="VARCHAR" property="packingno" />
     <result column="purchaseNo" jdbcType="VARCHAR" property="purchaseno" />
     <result column="customerId" jdbcType="VARCHAR" property="customerid" />
     <result column="customerName" jdbcType="VARCHAR" property="customername" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stock
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="updateByPrimaryKey" parameterType="com.shiro.steel.entity.Stock">
    update stock
   <trim prefix="SET" suffixOverrides=",">
		    <if test="memberid != null and '' != memberid">
		       memberId = #{memberid,jdbcType=VARCHAR},
		      </if>
		    <if test="productname != null and '' != productname">
		      productName = #{productname,jdbcType=VARCHAR},
		      </if>
		      <if test="productspec != null and '' != productspec">
		      productSpec = #{productspec,jdbcType=VARCHAR},
		      </if>
		      <if test="productfactory != null and '' != productfactory">
		      productFactory = #{productfactory,jdbcType=VARCHAR},
		      </if>
		      <if test="productmark != null and '' != productmark">
		      productMark = #{productmark,jdbcType=VARCHAR},
		      </if>
		      <if test="num != null and '' != num">
		      num = #{num,jdbcType=INTEGER},
		      </if>
		      <if test="weight != null and '' != weight">
		      weight = #{weight,jdbcType=DECIMAL},
		      </if>
		      <if test="price != null and '' != price">
		      price = #{price,jdbcType=DECIMAL},
		      </if>
		      <if test="unit != null and '' != unit">
		      unit = #{unit,jdbcType=VARCHAR},
		      </if>
		      <if test="total != null and '' != total">
		      total = #{total,jdbcType=DECIMAL},
		      </if>
		      <if test="warehousename != null and '' != warehousename">
		      warehousename = #{warehousename,jdbcType=VARCHAR},
		      </if>
		      <if test="stockouttype != null and '' != stockouttype">
		      stockOutType = #{stockouttype,jdbcType=VARCHAR},
		      </if>
		      <if test="quality != null and '' != quality">
		      quality = #{quality,jdbcType=VARCHAR},
		      </if>
		      <if test="remark != null and '' != remark">
		      remark = #{remark,jdbcType=VARCHAR},
		      </if>
		      <if test="status != null and '' != status">
		      status = #{status,jdbcType=VARCHAR},
		      </if>
		      <if test="crt != null and '' != crt">
		      crt = #{crt,jdbcType=TIMESTAMP},
		      </if>
		      <if test="upt != null and '' != upt">
		      upt = #{upt,jdbcType=TIMESTAMP}
		      </if>
		     
		      lockman = #{lockman,jdbcType=VARCHAR}

       </trim>
      where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, memberId, productName, productSpec, productFactory, productMark, num, 
    weight, price, unit, total, warehousename, stockOutType, quality, remark, status, 
    crt, upt, lockman
    from stock
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, memberId, productName, productSpec, productFactory, productMark, num, 
    weight, price, unit, total, warehousename, stockOutType, quality, remark, status, 
    crt, upt, lockman
    from stock
  </select>
  <update id="batchUpdateBykeys" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE stock
            <set>
                lockman = #{item.lockman},status = #{item.status},num = #{item.num},customerId = Null,customerName = Null
            </set>
            <where>
                productId = #{item.productid}
            </where>
        </foreach>
    </update>

    <update id="batchAddBykeys" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE stock
            <set>
                num = #{item.num}
            </set>
            <where>
                productId = #{item.productid} and status = #{item.status}
            </where>
        </foreach>
    </update>

    <update id="batchUpdatebyPurId" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            UPDATE stock
            <set>
                packingNo = #{item.packingno},weight = #{item.weight},unit = #{item.unit}
            </set>
            <where>
                purDetailId = #{item.purdetailid}
            </where>
        </foreach>
    </update>
</mapper>